name: Build MT3000 OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update -y
        sudo apt-get full-upgrade -y
        sudo apt install -y expect ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        echo "update完成"
    
    - name: Create new user
      run: |
        sudo adduser "builder" <<EOF
        12345
        12345
        EOF
        echo "新建用户完成"
        expect -c "
        spawn su - builder
        expect \":\"
        send \"12345\r\"
        interact
        "
        echo "用户切换成功"
    - name: Clone source code
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        git clone https://github.com/gl-inet/gl-infra-builder.git && cd gl-infra-builder
        git checkout v4.2.0_mt3000_release1
        python3 setup.py -c configs/config-mt798x-7.6.6.1.yml && cd mt7981
        ./scripts/gen_config.py target_mt7981_gl-mt3000 luci
        echo "源码抓取完毕"
        wget https://github.com/coolsnowwolf/lede/raw/master/include/meson.mk  -P ./include/
        wget https://github.com/coolsnowwolf/lede/raw/master/include/openssl-engine.mk  -P ./include/
        sed -i "/helloworld/d" "feeds.conf.default"
        echo "src-git helloworld https://github.com/fw876/helloworld.git" >> "feeds.conf.default"
        ./scripts/feeds update helloworld
        ./scripts/feeds install -a -f -p helloworld
        echo "src-git luci2 https://github.com/coolsnowwolf/luci" >> "feeds.conf.default"
        ./scripts/feeds update luci2
        ./scripts/feeds install -a -f -p luci2
        echo "src-git packages2 https://github.com/coolsnowwolf/packages" >> "feeds.conf.default"
        ./scripts/feeds update packages2
        ./scripts/feeds install -a -f -p packages2
        echo "src-git PWpackages https://github.com/xiaorouji/openwrt-passwall.git;packages" >> "feeds.conf.default"
        ./scripts/feeds update PWpackages
        ./scripts/feeds install -a -f -p PWpackages
        echo "src-git PWluci https://github.com/xiaorouji/openwrt-passwall.git;luci" >> "feeds.conf.default"
        ./scripts/feeds update PWluci
        ./scripts/feeds install -a -f -p PWluci
        wget 'https://github.com/liyuhaolol/Actions-GL.iNet-OpenWrt/blob/main/myfiles/mt3000.zip' --no-check-certificate && unzip -o mt3000.zip && rm -f mt3000.zip
        
        rm -rf .config
        echo "删除配置完毕"
        wget https://github.com/liyuhaolol/Actions-GL.iNet-OpenWrt/blob/main/mt3000/.config
        echo "配置抓取完毕"
        make -j8 download V=s
        echo "下载完毕"
        make -j$(nproc) V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: gl-infra-builder/mt7981/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd "/home/runner/work/Actions-GL.iNet-OpenWrt/Actions-GL.iNet-OpenWrt/gl-infra-builder/mt7981/bin/"
        
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: wekingchen/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 10

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
